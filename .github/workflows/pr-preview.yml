name: Add Preview to PR
on:
  workflow_call:
    inputs:
      triggering-run-id:
        required: true
        type: string
      artifact-id:
        required: true
        type: string
      pr-number:
        required: true
        type: string
permissions:
  contents: write
  pull-requests: write
env:
  PREVIEW_DIR: pull-requests/${{ inputs.pr-number }}
jobs:
  deploy-doc:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: jupedsim
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: gh-pages
          path: gh-pages
      - name: Download artifact from triggering workflow
        uses: ./jupedsim/.github/actions/download-artefact
        with:
          artifact-id: ${{ inputs.artifact-id }}
          triggering-run-id: ${{ inputs.triggering-run-id }}
          download-path: ${{ runner.temp }}/html
      - name: Stage preview into working tree
        run: |
          cd gh-pages
          rm -rf "$PREVIEW_DIR"
          mkdir -p "$(dirname "$PREVIEW_DIR")"
          cp -r ${{ runner.temp }}/html/. "$PREVIEW_DIR/"
      - name: Commit preview to gh-pages
        working-directory: gh-pages
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          repository: gh-pages
          branch: gh-pages
          commit_message: "docs: preview for PR #${{ inputs.pr-number }}"
          file_pattern: ${{ env.PREVIEW_DIR }}/**
      - name: Update PR body with preview link
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr-number }}
            });
            const repo = context.repo;
            const url  = `https://${repo.owner}.github.io/${repo.repo}/${process.env.PREVIEW_DIR}/`;

            const start = '<!-- PREVIEW-URL-START -->';
            const end   = '<!-- PREVIEW-URL-END -->';
            const snippet = `${start}\nðŸ”— **Preview:** ${url}\n${end}`;

            const original = pr.body || '';
            const updated  = original.includes(start)
              ? original.replace(new RegExp(`${start}[\\s\\S]*?${end}`), snippet)
              : `${original}\n\n${snippet}`;

            await github.rest.pulls.update({
              owner: repo.owner,
              repo:  repo.repo,
              pull_number: pr.number,
              body: updated
            });
