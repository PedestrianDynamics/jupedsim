variables:
  nproc: "1"


before_script:
  - nproc=`grep -c '^processor' /proc/cpuinfo`
  - echo "nproc = $nproc"
  - export LD_LIBRARY_PATH=$HOME/boost_1_61_0/stage/lib/:$LD_LIBRARY_PATH


#========== Pipeline ==================
stages:
  - configure
  - compile
  - unit_test
  - dev_test
  # - juelich_tests
  # - rimea_tests
#=====================================

#============== configure ============
configure-linux:
  artifacts:
    name: "${CI_BUILD_NAME}_${CI_BUILD_ID}"
    expire_in: 1 hour
    paths:
      - build
      - lib
      - lib/Debug
      - bin
  script:
    - mkdir -p build
    - cd build
    - cmake -DBUILD_TESTING=ON ..
    - echo "configure | ${CI_PROJECT_DIR}"
  stage: configure
  tags:
    - linux
#============== compile ============
make-linux:
  dependencies:
    - configure-linux
  artifacts:
    name: "${CI_BUILD_NAME}_${CI_BUILD_ID}"
    expire_in: 1 hour # optional expiry
    paths:
      - build
      - lib
      - lib/Debug
      - bin

  stage: compile
  tags:
    - linux
  script:
    - cd build
    - make -j$nproc
    - echo "compile | ${CI_PROJECT_DIR}"
  tags:
    - linux
#============== unit_test ============
test:
  dependencies:
    - make-linux

  stage: unit_test
  script:
    - cd build
    - ctest -R Boost
    - ctest -R clean
  tags:
    - linux
#============== dev_test ============
dev:
  dependencies:
    - make-linux

  stage: dev_test
  script:
    - cd build
    - ctest -R dev
  tags:
    - linux
#============== juelich ============
# verification:
#   dependencies:
#     - make-linux

#   stage: juelich_tests
#   script:
#     - cd build
#     - ctest -R juelich
#   only:
#     - develop
#   tags:
#     - linux
#=================================

#============== rimea ============
# verification:
#   dependencies:
#     - make-linux

#   stage: rimea
#   script:
#     - cd build
#     - ctest -R rimea
#   only:
#     - develop
#   tags:
#     - linux
#=================================

#============== validation =======
# validation:
#   dependencies:
#     - make-linux

#   stage: validation
#   script:
#     - cd build
#     - ctest -R validation
#   only:
#     - develop
#   tags:
#     - linux
#=================================

after_script:
  - echo "End CI" # todo: run report script and upload resulting pdf somewhere
